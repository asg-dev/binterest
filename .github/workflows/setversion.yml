name: Set Version
on: 
  issue_comment:
    types:
      - created
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  process-set-version:
    runs-on: ubuntu-latest
    # run only if it's a comment on a pull_request and the comment body contains the string '/set-version'
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/set-version') && github.ref_name == 'main' }}
    steps:
      - name: ensure formatting of version number
        id: ensure_version_number
        shell: bash
        # we ensure that our versioning scheme matches "v[0-9]+.[0-9]+.[0-9]+[A-Za-z]?" e.g. v0.0.1, v0.0.1A
        run: |
          if [[ "${{ github.event.comment.body }}" =~ version\=v[0-9]+\.[0-9]+\.[0-9]+[a-zA-Z]?$ ]]; then
            echo "VERSION_FORMATTED=true" >> $GITHUB_OUTPUT
          fi
      - name: ensure formatting of comment
        # if unformatted, don't proceed with the next steps
        if: ${{ steps.ensure_version_number.outputs.VERSION_FORMATTED != true }}
        run: |
          exit 1
      - name: get version number
        id: get_version_number
        shell: bash
        run: |
          vno=$(echo ${{ github.event.comment.body }} | cut -d "=" -f 2)
          echo "VERSION_NUMBER=$vno" >> $GITHUB_OUTPUT
      - name: checkout repository
        uses: actions/checkout@v4
      - name: add versioning
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          gh pr checkout ${{ github.event.issue.number }}
          echo -n "${{ steps.get_version_number.outputs.VERSION_NUMBER }}" > version
          git add -A
          git commit -m "[set-version-command] include/update version file"
          git push
