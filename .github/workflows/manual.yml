name: Set Environment
on:
  pull_request_target:
    types: ['opened', 'synchronize']
permissions:
  contents: write
  pull-requests: write
env:
  GH_TOKEN: ${{ github.token }}
  ENV_FILE_PATH: build_env
    
jobs:
  set-environment:
    runs-on: ubuntu-latest
    steps:
    - name: Set environment to local variable
      id: set-build-env
      run: |
        if [[ ${{ github.event.pull_request.base.ref }} == 'main' ]]; then
          echo "BUILD_ENV=PRODUCTION" >> $GITHUB_OUTPUT
        else
          echo "BUILD_ENV=DEVELOPMENT" >> $GITHUB_OUTPUT
        fi
    # deleting stale environment file in head to prevent merge conflicts with the base branch
    - name: Delete stale environment file in head
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        gh pr checkout ${{ github.event.pull_request.number }}
        if [[ -f $ENV_FILE_PATH ]]; then
          rm $ENV_FILE_PATH
        fi
        # push only if changes are detected!
        if [[ -n "$(git status --porcelain)" ]]; then
          git add -A
          git commit -m "[set-build-env] delete stale build_env"
          git push
        fi
    - name: checkout repository
      uses: actions/checkout@v4
    - name: Create environment file
      id: create-env-file
      continue-on-error: true
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        echo -n "${{ steps.set-build-env.outputs.BUILD_ENV }}" > $ENV_FILE_PATH

        git add -A
        if git diff --staged --quiet $ENV_FILE_PATH; then
          exit 2
        fi
        
        git commit -m "[set-build-env] include build env"
        git push
    - run: |
        echo 'OUTCOME -> ${{ steps.create-env-file.outcome }}; CONCLUSION -> ${{ steps.create-env-file.conclusion }}'
    - name: Comment successful build environment addition
      if: steps.create-env-file.outcome != 'failure'
      uses: actions/github-script@v3
      with: 
        script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Detected build environment '${{ steps.set-build-env.outputs.BUILD_ENV }}' written to build_env file. Do not overwrite this file."
            })
